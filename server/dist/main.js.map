{"version":3,"sources":["./src/app/settings/settings.component.ts","./src/environments/environment.ts","./src/app/prompt/prompt.component.ts","./src/app/logout/logout.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/settings/settings.component.html","./src/app/prompt/prompt.component.html","./src/app/logout/logout.component.ts","./src/app/auth.guard.ts","./src/app/app-routing.module.ts","./src/app/app.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '@auth0/auth0-angular';\r\n\r\n@Component({\r\n  selector: 'app-settings',\r\n  templateUrl: './settings.component.html',\r\n  styleUrls: ['./settings.component.scss'],\r\n})\r\nexport class SettingsComponent implements OnInit {\r\n  constructor(public auth: AuthService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.auth.isLoading$.subscribe(console.log);\r\n    this.auth.isAuthenticated$.subscribe(console.log);\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '@auth0/auth0-angular';\r\n\r\n@Component({\r\n  selector: 'app-prompt',\r\n  templateUrl: './prompt.component.html',\r\n  styleUrls: ['./prompt.component.scss'],\r\n})\r\nexport class PromptComponent implements OnInit {\r\n  constructor(public auth: AuthService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.auth.isLoading$.subscribe(console.log);\r\n    this.auth.isAuthenticated$.subscribe(console.log);\r\n  }\r\n}\r\n","You have been logged out.\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'idea-prompt';\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { AuthModule, AuthService } from '@auth0/auth0-angular';\nimport {\n  CommonModule,\n  HashLocationStrategy,\n  LocationStrategy,\n} from '@angular/common';\nimport { LogoutComponent } from './logout/logout.component';\nimport { PromptComponent } from './prompt/prompt.component';\nimport { SettingsComponent } from './settings/settings.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LogoutComponent,\n    PromptComponent,\n    SettingsComponent,\n  ],\n  imports: [\n    BrowserModule,\n    CommonModule,\n    AppRoutingModule,\n\n    AuthModule.forRoot({\n      domain: 'johnedwards.auth0.com',\n      clientId: 'XC1RbLfPaba8YT2K9KX0Xm3ub4lL4bmv',\n    }),\n  ],\n  providers: [\n    { provide: LocationStrategy, useClass: HashLocationStrategy },\n    AuthService,\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","Settings will be here.\r\n<button (click)=\"auth.logout({ returnTo: 'https://idea-prompt.herokuapp.com/#/prompt' })\">\r\n  Log out\r\n</button>\r\n\r\n<ul *ngIf=\"auth.user$ | async as user\">\r\n  <li>{{ user.name }}</li>\r\n  <li>{{ user.email }}</li>\r\n</ul>\r\n","This is where the magic will happen.\r\n\r\n<button (click)=\"auth.loginWithRedirect()\">Log in</button>\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-logout',\r\n  templateUrl: './logout.component.html',\r\n  styleUrls: ['./logout.component.scss'],\r\n})\r\nexport class LogoutComponent {}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  CanActivate,\r\n  ActivatedRouteSnapshot,\r\n  RouterStateSnapshot,\r\n} from '@angular/router';\r\nimport { AuthService } from '@auth0/auth0-angular';\r\nimport { Observable, of } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private auth: AuthService) {}\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ): Observable<boolean> {\r\n    return of(true);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AuthGuard } from './auth.guard';\nimport { LogoutComponent } from './logout/logout.component';\nimport { PromptComponent } from './prompt/prompt.component';\nimport { SettingsComponent } from './settings/settings.component';\n\nconst routes: Routes = [\n  { path: 'prompt', component: PromptComponent },\n  {\n    path: 'settings',\n    component: SettingsComponent,\n    canActivate: [AuthGuard],\n  },\n  { path: 'logout', component: LogoutComponent },\n  { path: '**', redirectTo: '/prompt' },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","<router-outlet></router-outlet>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}